:PROPERTIES:
:ID:       7c23b51b-d60a-4d2e-90b4-9c95743f2bfc
:ROAM_REFS: https://en.wikipedia.org/wiki/Late_binding
:END:
#+title: (en.wikipedia.org) Late binding - Wikipedia
#+filetags: :programming_language_design:computer_science:website:

#+begin_quote
  In [[https://en.wikipedia.org/wiki/Computing][computing]], *late binding* or *dynamic linkage*---though not an identical process to [[https://en.wikipedia.org/wiki/Dynamic_linker][dynamically linking]] imported code [[https://en.wikipedia.org/wiki/Library_(computing)][libraries]]---is a [[https://en.wikipedia.org/wiki/Computer_programming][computer programming]] mechanism in which the [[https://en.wikipedia.org/wiki/Method_(computer_programming)][method]] being called upon an [[https://en.wikipedia.org/wiki/Object_(computer_science)][object]], or the [[https://en.wikipedia.org/wiki/Subroutine][function]] being called with arguments, is looked up by name at [[https://en.wikipedia.org/wiki/Run_time_(program_lifecycle_phase)][runtime]].  In other words, a name is associated with a particular operation or object at runtime, rather than during [[https://en.wikipedia.org/wiki/Compiler][compilation]].  The name *dynamic binding* is sometimes used, but is more commonly used to refer to [[https://en.wikipedia.org/wiki/Dynamic_scope][dynamic scope]].

  With [[https://en.wikipedia.org/wiki/Early_binding][early binding]], or [[https://en.wikipedia.org/wiki/Static_binding][static binding]], in an [[https://en.wikipedia.org/wiki/Object-oriented_programming][object-oriented language]], the compilation phase fixes all [[https://en.wikipedia.org/wiki/Data_type][types]] of [[https://en.wikipedia.org/wiki/Variable_(computer_science)][variables]] and [[https://en.wikipedia.org/wiki/Expression_(computer_science)][expressions]].  This is usually stored in the compiled program as an offset in a [[https://en.wikipedia.org/wiki/Virtual_method_table][virtual method table]] ("v-table").  In contrast, with late binding, the compiler does not read enough information to verify the method exists or bind its slot on the v-table.  Instead, the method is looked up by name at runtime.

  The primary advantage of using late binding in [[https://en.wikipedia.org/wiki/Component_Object_Model][Component Object Model]] (COM) programming is that it does not require the compiler to reference the libraries that contain the object at [[https://en.wikipedia.org/wiki/Compile_time][compile time]].  This makes the compilation process more resistant to version conflicts, in which the class's v-table may be accidentally modified.  (This is not a concern in [[https://en.wikipedia.org/wiki/Just-in-time_compilation][just-in-time compiled]] platforms such as [[https://en.wikipedia.org/wiki/.NET][.NET]] or [[https://en.wikipedia.org/wiki/Java_(programming_language)][Java]], because the v-table is created at runtime by the [[https://en.wikipedia.org/wiki/Virtual_machine][virtual machine]] against the libraries as they are being loaded into the running application.)
#+end_quote
