:PROPERTIES:
:ID:       6ff54f9f-9c82-40e0-b41b-5a9cec26fa2e
:ROAM_REFS: https://dl.acm.org/doi/10.1145/3661145
:END:
#+title: (dl.acm.org) Significant Productivity Gains through Programming with Large Language Models | Proceedings of the ACM on Human-Computer Interaction
#+filetags: :programming:software_development:computer_science:article:science_paper:website:

#+begin_quote
  * Significant Productivity Gains through Programming with Large Language Models

  Authors: [[https://dl.acm.org/doi/10.1145/3661145][Thomas Weber]], [[https://dl.acm.org/doi/10.1145/3661145][Maximilian Brandmaier]], [[https://dl.acm.org/doi/10.1145/3661145][Albrecht Schmidt]], [[https://dl.acm.org/doi/10.1145/3661145][Sven Mayer]]

  [[https://dl.acm.org/toc/pacmhci/2024/8/EICS][Proceedings of the ACM on Human-Computer Interaction, Volume 8, Issue EICS]]
  Article No.: 256, Pages 1 - 29
  [[https://doi.org/10.1145/3661145]]

  Published: 17 June 2024

  ** Abstract

  Large language models like GPT and Codex drastically alter many daily tasks, including programming, where they can rapidly generate code from natural language or informal specifications.  Thus, they will change what it means to be a programmer and how programmers act during software development.  This work explores how AI assistance for code generation impacts productivity.  In our user study (N=24), we asked programmers to complete Python programming tasks supported by a) an auto-complete interface using GitHub Copilot, b) a conversational system using GPT-3, and c) traditionally with just the web browser.  Aside from significantly increasing productivity metrics, participants displayed distinctive usage patterns and strategies, highlighting that the form of presentation and interaction affects how users engage with these systems.  Our findings emphasize the benefits of AI-assisted coding and highlight the different design challenges for these systems.
#+end_quote
* (dl.acm.org) Significant Productivity Gains through Programming with Large Language Models - 3661145.pdf :mime_type_application_pdf:
:PROPERTIES:
:ID:       d97e3b1b-d1b9-4982-b35f-5ecfd1c1b92b
:ROAM_REFS: https://dl.acm.org/doi/pdf/10.1145/3661145
:END:

#+begin_quote
  * Significant Productivity Gains through Programming with Large Language Models

  THOMAS WEBER, LMU Munich, Germany
  MAXIMILIAN BRANDMAIER, LMU Munich, Germany
  ALBRECHT SCHMIDT, LMU Munich, Germany
  SVEN MAYER, LMU Munich, Germany

  Large language models like GPT and Codex drastically alter many daily tasks, including programming, where they can rapidly generate code from natural language or informal specifications.  Thus, they will change what it means to be a programmer and how programmers act during software development.  This work explores how AI assistance for code generation impacts productivity.  In our user study (N=24), we asked programmers to complete Python programming tasks supported by a) an auto-complete interface using GitHub Copilot, b) a conversational system using GPT-3, and c) traditionally with just the web browser.  Aside from significantly increasing productivity metrics, participants displayed distinctive usage patterns and strategies, highlighting that the form of presentation and interaction affects how users engage with these systems.  Our findings emphasize the benefits of AI-assisted coding and highlight the different design challenges for these systems.

  CCS Concepts: • *Human-centered computing* → Interaction paradigms; User studies; • *Software and its engineering*; • *Computing methodologies* → Artificial intelligence;

  Additional Key Words and Phrases: software development, programming, language models, gpt, github copilot, user study
#+end_quote
