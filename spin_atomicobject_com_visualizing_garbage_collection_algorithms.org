:PROPERTIES:
:ID:       f05b8335-5d22-4c6a-a8ba-5d6745b005d9
:ROAM_REFS: https://spin.atomicobject.com/visualizing-garbage-collection-algorithms/
:END:
#+title: (spin.atomicobject.com) Visualizing Garbage Collection Algorithms
#+filetags: :website:

#+begin_quote
  * Visualizing Garbage Collection Algorithms

  by: [[https://spin.atomicobject.com/author/ken-fox/][Ken Fox]], September 3, 2014

  Most developers take automatic garbage collection for granted.  It's just another amazing feature provided by our language run-times to make our jobs easier.

  But if you try to peek inside a modern garbage collector, it's very difficult to see how they actually work.  There are thousands of implementation details that will confuse you unless you already have a good understanding of what it's trying to do and how they can go fantastically wrong.

  I've built a toy with five different garbage collection algorithms.  Small animations were created from the run-time behavior.  You can find larger animations and the code to create them at [[https://github.com/kenfox/gc-viz][github.com/kenfox/gc-viz]].  It surprised me how much a simple animation reveals about these important algorithms.
#+end_quote
