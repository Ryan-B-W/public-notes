:PROPERTIES:
:ID:       64fb8325-3662-4047-b1a0-18e9888ae824
:ROAM_REFS: https://slhck.info/video/2017/02/24/crf-guide.html
:END:
#+title: (slhck.info) CRF Guide (Constant Rate Factor in x264, x265 and libvpx)
#+filetags: :video:graphics:software:website:

#+begin_quote
  * CRF Guide (Constant Rate Factor in x264, x265 and libvpx)

  Feb 24, 2017

  ** What is the Constant Rate Factor?

  The Constant Rate Factor (CRF) is the default quality (and rate control) setting for the [[http://www.videolan.org/developers/x264.html][x264]] and [[http://x265.org/][x265]] encoders, and it's also available for [[https://www.webmproject.org/code/][libvpx]].  With x264 and x265, you can set the values between 0 and 51, where lower values would result in better quality, at the expense of higher file sizes.  Higher values mean more compression, but at some point you will notice the quality degradation.

  For x264, sane values are between 18 and 28.  The default is 23, so you can use this as a starting point.

  With =ffmpeg=, it'd look like this:

  #+begin_src highlight
  ffmpeg -i input.mp4 -c:v libx264 -crf 23 output.mp4
  #+end_src

  For x265, the default CRF is 28:

  #+begin_src highlight
  ffmpeg -i input.mp4 -c:v libx265 -crf 28 output.mp4
  #+end_src

  For libvpx, there is no default, and CRF can range between 0 and 63.  31 is recommended for 1080p HD video:

  #+begin_src highlight
  ffmpeg -i input.mp4 -c:v libvpx-vp9 -crf 31 -b:v 0 output.mkv
  #+end_src

  If you're unsure about what CRF to use, begin with the default and change it according to your subjective impression of the output.  Is the quality good enough?  No?  Then set a lower CRF.  Is the file size too high?  Choose a higher CRF.  A change of Â±6 should result in about half/double the file size, although your results might vary.

  You should use CRF encoding primarly for offline file storage, in order to achieve the most optimal encodes.  For other applications, [[https://slhck.info/articles/rate-control][other rate control modes]] are recommended.  In video streaming, for example, CRF can be used in a constrained/capped mode to prevent bitrate spikes.
#+end_quote
