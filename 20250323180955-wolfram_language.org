:PROPERTIES:
:ID:       3e3a70b9-48ef-470a-bb79-03acaea29f1e
:END:
#+title: Wolfram Language
#+filetags: :software:mathematics:programming_language:computer_science:

The [[id:b24601aa-09df-41e1-aa7e-25ead342db34][programming language]] used by [[id:eb6e997b-515b-4dae-a908-3b12085856a3][Mathematica]].
* (www.wolfram.com) Wolfram Language: Programming Language + Built-In Knowledge :website:
:PROPERTIES:
:ID:       cbf8e4a6-dca7-4173-9dfb-784bca4d0bcd
:ROAM_REFS: https://www.wolfram.com/language/
:END:

#+begin_quote
  * Wolfram Language

  Wolfram Language is a symbolic language, deliberately designed with the breadth and unity needed to develop powerful programs quickly. By integrating high-level forms—like [[https://reference.wolfram.com/language/ref/Image][Image]], [[https://reference.wolfram.com/language/ref/GeoPolygon.html][GeoPolygon]] or [[https://reference.wolfram.com/language/ref/Molecule.html][Molecule]]—along with advanced superfunctions—such as [[https://reference.wolfram.com/language/ref/ImageIdentify.html][ImageIdentify]] or [[https://reference.wolfram.com/language/ref/ApplyReaction.html][ApplyReaction]]—Wolfram Language makes it possible to quickly express complex ideas in computational form.

  * Wolfram Language

  *** Knowledge Built In

  The philosophy of Wolfram Language is to build as much knowledge—about algorithms and the world—into the language as possible.

  [[https://www.wolfram.com/language/core-areas/][Highlighted Core Areas]]

  [[https://reference.wolfram.com/language/][Full Documentation & Reference]]

  *** The Power of Symbolic Programming

  Wolfram Language represents everything—data, formulas, code, graphics, documents, interfaces, etc.—as symbolic expressions, making possible a new level of programming flexibility and power.

  *** The Power of Symbolic Programming

  Wolfram Language represents everything—data, formulas, code, graphics, documents, interfaces, etc.—as symbolic expressions, making possible a new level of programming flexibility and power.

  *** The Wolfram Language Trajectory

  Wolfram Language, first released in Mathematica in 1988, initiated a revolution in computational mathematics and has continuously expanded into all areas of computation, driving advances in industry and research for more than three decades.

  [[https://www.wolfram.com/language/quick-revision-history/][Version release notes]]

  ** Live Playground

  /This is an interactive notebook—try making your own changes!/

  Explore the full documentation below to learn more about what Wolfram Language can do, or get started with a [[https://www.wolframcloud.com/signin?targetUrl=https://www.wolframcloud.com/&createAccount=true&src=CloudBasicWelcomeScreen][Free Cloud Trial]]

  ** Highlighted Core Areas

  [[https://www.wolfram.com/language/core-areas/machine-learning/]]

  //Wolfram\\
  *Machine Learning & LLMs*

  [[https://www.wolfram.com/language/core-areas/visualization/]]

  //Wolfram\\
  *Visualization*

  [[https://www.wolfram.com/language/core-areas/image/]]

  //Wolfram\\
  *Image Computation*

  [[https://www.wolfram.com/language/core-areas/calculus-algebra/]]

  //Wolfram\\
  *Calculus & Algebra*

  [[https://www.wolfram.com/language/core-areas/optimization/]]

  //Wolfram\\
  *Optimization*

  [[https://www.wolfram.com/language/core-areas/fem/]]

  //Wolfram\\
  *FEM*

  [[https://www.wolfram.com/language/core-areas/geometry/]]

  //Wolfram\\
  *Geometric Computation*

  [[https://www.wolfram.com/language/core-areas/chemistry/]]

  //Wolfram\\
  *Chemistry*

  [[https://www.wolfram.com/language/core-areas/audio]]

  //Wolfram\\
  *Audio Computation*

  [[https://www.wolfram.com/language/core-areas/video]]

  //Wolfram\\
  *Video Computation*

  [[https://www.wolfram.com/language/core-areas/knowledgebase]]

  //Wolfram\\
  *Knowledgebase*

  [[https://www.wolfram.com/language/core-areas/geography/]]

  //Wolfram\\
  *Geography*

  [[https://www.wolfram.com/language/core-areas/astronomy/]]

  //Wolfram\\
  *Astronomy*

  [[https://www.wolfram.com/language/core-areas/controls/]]

  //Wolfram\\
  *Control Systems*

  [[https://www.wolfram.com/language/core-areas/signal/]]

  //Wolfram\\
  *Signal Processing*

  [[https://www.wolfram.com/language/core-areas/mathematical-functions]]

  //Wolfram\\
  *Mathematical Functions*

  [[https://www.wolfram.com/language/core-areas/user-interfaces]]

  //Wolfram\\
  *User Interfaces*

  [[https://www.wolfram.com/resources/tools-for-AIs/]]

  //Wolfram\\
  *Tools for AIs*

  ** Explore What's Built into Wolfram Language

  [[https://reference.wolfram.com/language/][Full Documentation & Reference]]

  [[https://reference.wolfram.com/language/#CoreLanguageAndStructure][Core Language & Structure]] [[https://reference.wolfram.com/language/#DataManipulationAndAnalysis][Data Manipulation & Analysis]] [[https://reference.wolfram.com/language/#VisualizationAndGraphics][Visualization & Graphics]] [[https://reference.wolfram.com/language/#MachineLearning][Machine Learning]] [[https://reference.wolfram.com/language/#SymbolicAndNumericComputation][Symbolic & Numeric Computation ]] [[https://reference.wolfram.com/language/#HigherMathematicalComputation][Higher Mathematical Computation]] [[https://reference.wolfram.com/language/#StringsAndText][Strings & Text]] [[https://reference.wolfram.com/language/#GraphsAndNetworks][Graphs & Networks]] [[https://reference.wolfram.com/language/#Images][Images]] [[https://reference.wolfram.com/language/#Geometry][Geometry]] [[https://reference.wolfram.com/language/#Sound][Sound & Video]] [[https://reference.wolfram.com/language/#KnowledgeRepresentationAndNaturalLanguage][Knowledge Representation & Natural Language]] [[https://reference.wolfram.com/language/#TimeRelatedComputation][Time-Related Computation]] [[https://reference.wolfram.com/language/#GeographicDataAndComputation][Geographic Data & Computation]] [[https://reference.wolfram.com/language/#ScientificandMedicalDataAndComputation][Scientific and Medical Data & Computation]] [[https://reference.wolfram.com/language/#EngineeringDataAndComputation][Engineering Data & Computation]] [[https://reference.wolfram.com/language/#FinancialDataAndComputation][Financial Data & Computation]] [[https://reference.wolfram.com/language/#SocialCulturalAndLinguisticData][Social, Cultural & Linguistic Data]] [[https://reference.wolfram.com/language/#NotebookDocumentsAndPresentation][Notebook Documents & Presentations]] [[https://reference.wolfram.com/language/#UserInterfaceConstruction][User Interface Construction]] [[https://reference.wolfram.com/language/#SystemOperationAndSetup][System Operation & Setup]] [[https://reference.wolfram.com/language/#ExternalInterfacesAndConnections][External Interfaces & Connections]] [[https://reference.wolfram.com/language/#CloudAndDeployment][Cloud & Deployment]]

  ** Learning Resources

  **** ONLINE DOCUMENTATION

  [[https://reference.wolfram.com/language/]]

  Complete Documentation with Extensive Examples

  **** ONLINE COURSE

  [[https://www.wolfram.com/language/fast-introduction-for-programmers/en/]]

  Fast Introduction for Programmers

  **** ONLINE BOOK

  [[https://wolfram.com/eiwl]]

  /An Elementary Introduction to the Wolfram Language/

  **** WOLFRAM U

  Browse the Complete Catalog of Open Interactive Courses & Videos

  [[https://www.wolfram.com/wolfram-u/courses/catalog/][Browse All Open Courses]]

  *** Wolfram Notebooks

  [[https://www.wolfram.com/notebooks/]]

  A powerful environment for exploration and communication

  *** $ wolframscript

  [[https://www.wolfram.com/wolframscript/]]

  Command-line access to Wolfram Language for software integration

  brew install wolfram-engine

  More About...

  - [[https://www.wolfram.com/engine/][Wolfram Engine]]
  - [[https://www.wolfram.com/developer/#add-ons][IDE Support]]
  - [[https://www.wolfram.com/developer/][Software Development]]

  ** Community Resources

  *** Wolfram Community

  [[https://community.wolfram.com/]]

  Engage with experts, inventors, tinkerers and explorers. Ask questions and share ideas.

  *** Paclet Repository

  [[https://resources.wolframcloud.com/PacletRepository/]]

  Community-contributed installable additions to Wolfram Language

  *** Function Repository

  [[https://resources.wolframcloud.com/FunctionRepository/]]

  Thousands of community-contributed Wolfram Language functions anyone can use

  *** Demonstrations Project

  [[https://demonstrations.wolfram.com/]]

  13,000+ interactive apps with open code exploring topics in science, math, engineering, technology and more

  ** Design Process

  [[https://livestreams.stephenwolfram.com/category/live-ceoing/]]

  Language Design Livestreams

  [[https://www.wolfram.com/language/principles/]]

  Principles and Concepts

  [[https://writings.stephenwolfram.com/category/wolfram-language/]]

  Essays on Wolfram Language by Stephen Wolfram
#+end_quote
** (www.wolfram.com) Wolfram Language Q&A
:PROPERTIES:
:ID:       d465de79-5a72-47aa-a6e8-b0e8b77db964
:ROAM_REFS: https://www.wolfram.com/language/faq/
:END:

#+begin_quote
  ** Q&A

  *** How is it different from Mathematica?

  In a first approximation, the Wolfram Language = Mathematica + Wolfram|Alpha + Cloud + more.  It's compatible with Mathematica, but it's a significant evolution, including knowledge, deployment and many new ideas.

  *** How difficult is it to learn?

  The Wolfram Language is broad and deep, but it's built on a small number of principles that are easy to learn.  It's also got highly responsive predictive user assistance that's always suggesting what to do next.  It's got hundreds of thousands of live examples.  And---the real ace in the hole---you can get started just by using natural language, like in Wolfram|Alpha.

  *** What platforms does it run on?

  The Wolfram Engine runs on desktop, cloud and mobile.  Its kernel runs on Intel and ARM architectures, under Linux, Mac and Windows, as well as under iOS and soon Android, and certain embedded operating systems.  Its interactive user interface runs natively on Mac, Windows, Linux and iOS, and is also supported on web browsers.

  *** Is there an existing user community?

  Effectively, yes.  Because everyone who uses Mathematica is effectively already using the Wolfram Language---and there's a well-developed worldwide user community for Mathematica.

  *** Can it produce graphics?

  Absolutely!  In fact, one of the great strengths of the Wolfram Language is a vast range of built-in, highly automated 2D, 3D, network, geo, etc. visualization and charting functions.  Visualizations can be interactive and can be exported in any standard format.

  *** Is it open source?

  Except for a few components, no.  The Wolfram Language has evolved from more than three decades of intense commercial development, and now relies on many cloud-based components.  Wolfram Research's goal is make the Wolfram Language as widely accessible as possible, both locally and on the cloud.

  *** Does it have programming buzzword ____?

  Check out the [[https://www.wolfram.com/language/for-experts/][buzzword compliance]] list.  It might just be the language that hits the most buzzwords ever.  But more important, it's based on a very strong and innovative foundation of symbolic programming that allows it to take advantage of an impressively broad range of programming ideas and possibilities.

  *** How is it licensed?

  The Wolfram Language has multiple licensing models depending on usage scenario.  It is available free for certain casual use in the cloud, in CDF Player and on systems such as Raspberry Pi.  It is available through site licenses at educational institutions.  It is also available in a variety of subscription and paid-up product offerings.  The Wolfram Language is also licensed for OEM use, embedded in hardware or software systems.

  *** Does it have dynamic typing?

  Yes.  In a very strong symbolic form.  As well as [[http://reference.wolfram.com/language/][lots]] of other highly sought features of modern languages.

  *** How can I get help with the Wolfram Language?

  There's an active online community, and for many Wolfram Language products, there's also technical support available through Wolfram Research.  Wolfram Solutions provides corporate consulting for Wolfram Language projects.

  *** Does it run interactively?

  Yes.  You can always run the Wolfram Language interactively, to build up and debug your programs.  It can also be run in a server mode, supporting many types of large-scale production uses.

  *** Is there Wolfram Language consulting available?

  Yes.  Both through Wolfram Research and third parties.  Wolfram Technical Consulting assists with small projects; Wolfram Solutions tackles large-scale development and deployment for major organizations.

  *** Can it operate with other languages?

  Yes!  The Wolfram Language can automatically create Instant APIs, as well as code to call them from most standard languages.  Full two-way communication is available through the WSTP (Wolfram Symbolic Transfer Protocol) high-level protocol, with native support for C, C++, Java, .NET and R.

  *** How does it compare to other languages?

  Unlike other languages, the Wolfram Language is knowledge based and has the philosophy of automating and building in as much functionality as possible.  The Wolfram Language is also symbolic, which gives it a much richer structure---and allows it to unify and extend [[https://www.wolfram.com/language/for-experts/][many powerful ideas]] that have begun to be popular in some of today's more modern languages.

  *** Does it support parallelism?

  Yes.  Parallelism is built right into the language.  In a variety of environments, the Wolfram Engine has direct support for homogeneous or heterogeneous distributed computing.

  *** What is its history and lineage?

  The Wolfram Language is a culmination of technology built by Wolfram Research for more than three decades.  The structure and core algorithms of the Wolfram Language are a fully compatible evolution of the language in Mathematica.  The Wolfram Knowledgebase is an evolution of the Wolfram|Alpha project, which also pioneered some of the cloud methods used for the Wolfram Language.

  *** How fast is it?

  The concept of the Wolfram Language is to have a wide range of capabilities built in---and then to implement these with optimal algorithms.  In practice, these algorithms almost always beat even the fastest specially written code, not least because they can freely call on other sophisticated Wolfram Language capabilities.  If you don't use Wolfram Language style, but instead write C-like code, it will run slower---though if you have actual C code, you can simply call it at full speed through WolframLink.

  *** What languages were influences?

  LISP and APL were two early influences, as was Stephen Wolfram's 1981 SMP symbolic computation language.  During its development inside Mathematica, the Wolfram Language evolved its own design concepts and methodology, and several languages that have appeared in the last three decades have been significantly influenced by it.

  *** How well does it scale?

  The remarkable thing about the Wolfram Language is that it's good for both one-line and million-line programs.  Within Mathematica, the Wolfram Language has been used in countless production environments.  It's also what's used for Wolfram|Alpha, which processes many billions of queries every year.

  *** How involved is Stephen Wolfram?

  Very deeply.  He reviews every feature of the language and has invented many aspects of it.  Over the years he has assembled a large and talented team who carry forward the concepts of the language.  But the Wolfram Language is still in many ways Stephen Wolfram's life work.

  *** Does it run on the web?

  Yes!  Through the Wolfram Cloud, it can be run interactively, or it can be run through APIs, forms and other types of web deployment.

  *** How is it related to the Internet of Things?

  The Wolfram Language is set up to incorporate a model of the real world, allowing it to immediately represent and analyze data from connected devices.  It has frameworks for connecting to devices directly and through APIs and processing data either locally or in the cloud.  The Wolfram Connected Devices Project has been curating today's devices.
#+end_quote
* (en.wikipedia.org) Wolfram Language - Wikipedia                   :website:
:PROPERTIES:
:ID:       032ff6ce-e694-4d1a-b575-3dc4512f09b7
:ROAM_REFS: https://en.wikipedia.org/wiki/Wolfram_Language
:END:

#+begin_quote
  The *Wolfram Language* ([[https://en.wikipedia.org/wiki/Help:IPA/English][/ˈwʊlfrəm/]] [[https://en.wikipedia.org/wiki/Help:Pronunciation_respelling_key][/WUUL-frəm/]]) is a proprietary, [[https://en.wikipedia.org/wiki/General-purpose_programming_language][general-purpose]], [[https://en.wikipedia.org/wiki/Very_high-level_programming_language][very high-level]] [[https://en.wikipedia.org/wiki/Multi-paradigm_programming_language][multi-paradigm programming language]] developed by [[https://en.wikipedia.org/wiki/Wolfram_Research][Wolfram Research]].  It emphasizes [[https://en.wikipedia.org/wiki/Symbolic_computation][symbolic computation]], [[https://en.wikipedia.org/wiki/Functional_programming][functional programming]], and [[https://en.wikipedia.org/wiki/Rule-based_programming][rule-based programming]] and can employ arbitrary [[https://en.wikipedia.org/wiki/Data_structure][structures]] and data.  It is the programming language of the mathematical symbolic computation program [[https://en.wikipedia.org/wiki/Mathematica][Mathematica]].
#+end_quote
** Sources (partial list)
*** [[id:d465de79-5a72-47aa-a6e8-b0e8b77db964][(www.wolfram.com) Wolfram Language Q&A]]
* See Also
** [[id:775c7dbc-5f3f-47be-995c-9cdf6daf04b9][An Elementary Introduction to the Wolfram Language]]
