:PROPERTIES:
:ID:       45dfd727-eea3-4472-9b24-ae00567bf5be
:ROAM_REFS: https://github.com/phi-go/rfcs/blob/guaranteed-tco/text/0000-explicit-tail-calls.md https://github.com/phi-go/rfcs/blob/4dfb99128b8572df8292ca7af757125fb5199016/text/0000-explicit-tail-calls.md
:END:
#+title: (github.com) rfcs/text/0000-explicit-tail-calls.md at guaranteed-tco · phi-go/rfcs · GitHub
#+filetags: :rust_lang:website:

#+begin_quote
  - Feature Name: explicit_tail_calls
  - Start Date: 2023-04-01
  - RFC PR: [[https://github.com/rust-lang/rfcs/pull/3407][rust-lang/rfcs#3407]]
  - Rust Issue: [[https://github.com/rust-lang/rust/issues/112788][rust-lang/rust#112788]]

  * Summary

  While tail call elimination (TCE) is already possible via tail call optimization (TCO) in Rust, there is no way to guarantee that a stack frame must be reused.  This RFC describes a language feature providing tail call elimination via the =become= keyword providing this guarantee.  If this guarantee can not be provided by the compiler a compile time error is generated instead.
#+end_quote
