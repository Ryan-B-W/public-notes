:PROPERTIES:
:ID:       b41e5238-e1c4-40f6-8875-8f61628f1c40
:END:
#+title: Total Functional Programming by D.A. Turner
#+filetags: :programming_type_systems:computer_science:science_paper:

* (www.jucs.org) Abstract                                           :website:
:PROPERTIES:
:ID:       14f81eca-f0d3-4e31-9e96-433b36fb371f
:ROAM_REFS: https://www.jucs.org/jucs_10_7/total_functional_programming/abstract.html
:END:

#+begin_quote
  *** Total Functional Programming

  *D.A.Turner* (Middlesex University, UK)\\
  [[mailto://d.a.turner@mdx.ac.uk][d.a.turner@mdx.ac.uk]]

  *Abstract:* The driving idea of functional programming is to make programming more closely related to mathematics.  A program in a functional language such as Haskell or Miranda consists of equations which are both computation rules and a basis for simple algebraic reasoning about the functions and data structures they define.  The existing model of functional programming, although elegant and powerful, is compromised to a greater extent than is commonly recognised by the presence of partial functions.  We consider a simple discipline of /total functional programming/ designed to exclude the possibility of non-termination.  Among other things this requires a type distinction between data, which is finite, and codata, which is potentially infinite.
#+end_quote
* (www.jucs.org) Total Functional Programming (untitled - jucs_10_07_0751_0768_turner.pdf) :mime_type_application_pdf:website:
:PROPERTIES:
:ID:       9600e9c0-ced4-4d57-9c10-48a40f2c2f2e
:ROAM_REFS: https://www.jucs.org/jucs_10_7/total_functional_programming/jucs_10_07_0751_0768_turner.pdf
:END:
