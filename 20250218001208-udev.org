:PROPERTIES:
:ID:       5a80b376-7e8d-47d8-9e2f-6a6133cd7e11
:END:
#+title: udev
#+filetags: :open_source:linux:software:

Operating system daemon for Linux that manages event handling in response to changes to hardware peripherals.
* (en.wikipedia.org) udev - Wikipedia                               :website:
:PROPERTIES:
:ID:       59ee3454-c6a8-417f-b31b-8bf92c5aa383
:ROAM_REFS: https://en.wikipedia.org/wiki/Udev
:END:

#+begin_quote
  *udev* (userspace [[https://en.wikipedia.org/wiki/Devfs][/dev]]) is a device manager for the [[https://en.wikipedia.org/wiki/Linux_kernel][Linux kernel]].  As the successor of [[https://en.wikipedia.org/wiki/Devfsd][devfsd]] and hotplug, udev primarily manages [[https://en.wikipedia.org/wiki/Device_node][device nodes]] in the [[https://en.wikipedia.org/wiki/Devfs][/dev]] directory.  At the same time, udev also handles all [[https://en.wikipedia.org/wiki/User_space][user space]] events raised when hardware devices are added into the system or removed from it, including [[https://en.wikipedia.org/wiki/Firmware][firmware]] loading as required by certain devices.
#+end_quote
* (wiki.archlinux.org) udev - ArchWiki                              :website:
:PROPERTIES:
:ID:       10fd99c6-882b-4413-a196-a8d269729262
:ROAM_REFS: https://wiki.archlinux.org/title/Udev
:END:

#+begin_quote
  /udev/ is a userspace system that enables the operating system administrator to register userspace handlers for events.  The events received by /udev/'s daemon are mainly generated by the (Linux) kernel in response to physical events relating to peripheral devices.  As such, /udev/'s main purpose is to act upon peripheral detection and hot-plugging, including actions that return control to the kernel, e.g., loading kernel modules or device firmware.  Another component of this detection is adjusting the permissions of the device to be accessible to non-root users and groups.

  As the successor of /devfsd/ and /hotplug/, /udev/ also manages device nodes in the =/dev= directory by adding, symlinking and renaming them. /udev/ replaces the functionality of both /hotplug/ and /hwdetect/.

  /udev/ handles separate events concurrently (in parallel), leading to a potential performance improvement over older systems.  At the same time, this can complicate system administration, because, for example, the kernel module loading order is not preserved across boots.  If the machine has multiple block devices, this may manifest itself in the form of device nodes changing designations after reboot.  For example, if the machine has two hard drives, =/dev/sda= may on next boot become =/dev/sdb=.  See below for more info on this.
#+end_quote
