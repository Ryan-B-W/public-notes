:PROPERTIES:
:ID:       728907af-960f-4d75-8324-e5d2e2f76049
:ROAM_REFS: https://edicl.github.io/cl-who/
:END:
#+title: (edicl.github.io) CL-WHO - Yet another Lisp markup language
#+filetags: :software:common_lisp:lisp:website:

#+begin_quote
  ** CL-WHO - Yet another Lisp markup language

  *** [[https://edicl.github.io/cl-who/null][Abstract]]

  There are plenty of [[http://www.cliki.net/Lisp%20Markup%20Languages][Lisp Markup Languages]] out there - every Lisp programmer seems to write at least one during his career - and CL-WHO (where /WHO/ means "with-html-output" for want of a better acronym) is probably just as good or bad as the next one.  They are all more or less similar in that they provide convenient means to convert S-expressions intermingled with code into (X)HTML, XML, or whatever but differ with respect to syntax, implementation, and API.  So, if you haven't made a choice yet, check out the alternatives as well before you begin to use CL-WHO just because it was the first one you came across.  (Was that repelling enough?)  If you're looking for a slightly different approach you might also want to look at [[http://weitz.de/html-template/][HTML-TEMPLATE]].

  I wrote this one in 2002 although at least Tim Bradshaw's [[http://www.cliki.net/htout][htout]] and [[http://opensource.franz.com/aserve/aserve-dist/doc/htmlgen.html][AllegroServe's HTML generation facilities]] by John Foderaro of Franz Inc. were readily available.  Actually, I don't remember why I had to write my own library - maybe just because it was fun and didn't take very long.  The syntax was obviously inspired by htout although it is slightly different.

  CL-WHO tries to create efficient code in that it makes constant strings as long as possible.  In other words, the code generated by the CL-WHO macros will usually be a sequence of =WRITE-STRING= forms for constant parts of the output interspersed with arbitrary code inserted by the user of the macro.  CL-WHO will make sure that there aren't two adjacent =WRITE-STRING= forms with constant strings.  CL-WHO's output is either XHTML (default), 'plain' (SGML) HTML or HTML5 (using HTML syntax) --- depending on what you've set [[https://edicl.github.io/cl-who/#html-mode][=HTML-MODE=]] to.

  CL-WHO is intended to be portable and should work with all conforming Common Lisp implementations.  [[https://edicl.github.io/cl-who/#mail][Let us know]] if you encounter any problems.

  It comes with a [[http://www.opensource.org/licenses/bsd-license.php][BSD-style license]] so you can basically do with it whatever you want.
#+end_quote
