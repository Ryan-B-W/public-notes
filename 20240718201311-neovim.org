:PROPERTIES:
:ID:       54504d3e-4f52-4dd2-9f2a-3ad550400bc9
:END:
#+title: Neovim
#+filetags: :development_environment:vim:software:software_development:programming:computer_science:

A fork of [[id:37c53f5b-c586-41ff-a4fe-b44c05ed3c1f][Vim]] that aims to extend Vim with built-in LSP support, Lua for scripting, and, later, built-in tree-sitter support.  Commonly used with advanced configurations and package managers as an IDE.  Current-day competitor to [[id:aca1324c-b142-4e34-a121-a8bb0a79ddf8][Emacs]].
* (neovim.io) Home - Neovim                                         :website:
:PROPERTIES:
:ID:       0d1a9bbb-e573-4b32-a7ce-785dd18d3899
:ROAM_REFS: https://neovim.io/
:END:

#+begin_quote
  * hyperextensible Vim-based text editor

  ** Features

  *** Extensible

  - API is first-class: [[https://neovim.io/doc/user/api.html#api-mapping][discoverable]], [[https://neovim.io/doc/user/api.html#api-contract][versioned]], [[https://neovim.io/doc/user/api.html#api-global][documented]].
  - [[http://msgpack.org/][MessagePack]] structured communication enables extensions in any language.
  - Remote plugins run as co-processes, safely and asynchronously.
  - GUIs, IDEs, web browsers can =--embed= Neovim as an editor or script host.
  - [[https://neovim.io/doc/user/lua.html][Lua plugins]] are easy to create just like Vimscript plugins.  Your config can live in =init.lua=!
  - AST-producing [[https://tree-sitter.github.io/][parsing engine]] enables faster, more accurate syntax highlighting, code navigation, refactoring, text objects, and motions.

  *** Usable

  - Strong [[https://neovim.io/doc/user/vim_diff.html#nvim-defaults][defaults]] including a unique, minimalist colorscheme.
  - Builtin [[https://neovim.io/doc/user/lsp.html][LSP client]] for semantic code inspection and refactoring (go-to definition, "find references", format, ...).
  - Client-server architecture allows you to *detach the UI* and keep the editor session running (like tmux).  Attach multiple UIs to any Nvim session.
  - Works the same everywhere: one build-type, one command.
  - Modern terminal features such as cursor styling, focus events, bracketed paste.
  - Builtin [[https://www.youtube.com/watch?v=xZbMVj9XSUo][:terminal]] set the standard for "TTY as a basic component".

  *** Drop-in Vim

  - Fully compatible with Vim's editing model and Vimscript v1.
  - Start with [[https://neovim.io/doc/user/nvim.html#nvim-from-vim][=:help nvim-from-vim=]] if you already use Vim.  If not, try =:Tutor=.
#+end_quote
* (en.wikipedia.org) Vim (text editor) - Neovim - Wikipedia         :website:
:PROPERTIES:
:ID:       298a6646-02c1-4f7a-953e-ec827f9c1235
:ROAM_REFS: https://en.wikipedia.org/wiki/Vim_(text_editor)#Neovim
:END:

#+begin_quote
  *Neovim* is a [[https://en.wikipedia.org/wiki/Fork_(software_development)][fork]] of Vim that strives to improve the extensibility and maintainability of Vim.  Some features of the fork include built-in [[https://en.wikipedia.org/wiki/Language_Server_Protocol][Language Server Protocol]] (LSP) support, support for [[https://en.wikipedia.org/wiki/Asynchronous_I/O][asynchronous I/O]], and support for [[https://en.wikipedia.org/wiki/Lua_(programming_language)][Lua]] scripting using [[https://en.wikipedia.org/wiki/LuaJIT][luaJIT]] language interpreter.  The project is [[https://en.wikipedia.org/wiki/Free_software][free software]] and its [[https://en.wikipedia.org/wiki/Source_code][source code]] is available on [[https://en.wikipedia.org/wiki/GitHub][GitHub]].

  Neovim has the same configuration syntax as Vim prior to vim9script; thus the same [[https://en.wikipedia.org/wiki/Configuration_file][configuration file]] can be used with both editors, although there are minor differences in details of options.  If the added features of Neovim are not used, Neovim is compatible with almost all of Vim's features.

  The Neovim project was started in 2014, after a patch to Vim supporting multi-threading was rejected.  Neovim had a successful fundraising in March 2014, supporting at least one full-time developer.

  Several frontends are under development which make use of Neovim's capabilities.

  With the 0.5 release of Neovim on 2 July 2021, it gained built-in support for the [[https://en.wikipedia.org/wiki/Language_Server_Protocol][LSP]], [[https://en.wikipedia.org/wiki/Tree-sitter_(parser_generator)][Tree-sitter]], and more complete Lua support -- including the support for configuration scripts written in Lua instead of VimL.
#+end_quote
