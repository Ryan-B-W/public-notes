:PROPERTIES:
:ID:       a6cd8d4a-4580-4d36-b439-1a27ce3daff4
:ROAM_REFS: https://pythonpracticeprojects.com/lisp.html
:END:
#+title: (pythonpracticeprojects.com) Lisp Interpreter
#+filetags: :website:

#+begin_quote
  * Lisp Interpreter

  ** Motivation

  Any serious attempt at studying the art of computer programming must include a component on programming languages.  Code is a programmer's raw material, like paint to an artist or words to a writer.  Starting out, we all tend to see a programming language as a set of directives that can be used to manipulate data.  Code lives in one world and data another.  This is a limit that holds you back from really jumping down the computation rabbit hole.  The best way, that I've found, to really understand the idea "code is data" is to implement your own interpreter.

  This project is focused on producing a Lisp interpreter, more specifically a Scheme interpreter.  You may be wondering, why are we writing an interpreter for an outdated AI language?  Lisp is a good project because the syntax is exceedingly simple.  There is one main syntax construct and a few special cases that make up the entire language.  This simplicity clears away a slew of problems and exposes the main insight of code/data equivalence.

  Also, Lisp is worth learning because it makes you a better programmer.  That's not only my opinion.  Great hackers of the past have agreed with the sentiment.

  : Lisp is worth learning for the profound enlightenment experience you will have when you finally get it; that experience will make you a better programmer for the rest of your days, even if you never actually use Lisp itself a lot.  -Eric Raymond
#+end_quote
