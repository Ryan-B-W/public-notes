:PROPERTIES:
:ID:       a22e543a-3422-47ce-b50c-6ee532e30a4f
:END:
#+title: Uzbl
#+filetags: :www:software:

* (www.uzbl.org) Uzbl - web interface tools which adhere to the unix philosophy. :website:
:PROPERTIES:
:ID:       5b76375e-bdfa-4cd2-91d1-7d50ebd6db14
:ROAM_REFS: https://www.uzbl.org/
:END:

#+begin_quote
  ** The uzbl web interface tools

  Uzbl follows the UNIX philosophy - "Write programs that do one thing and do it well.  Write programs to work together.  Write programs to handle text streams, because that is a universal interface."  Uzbl comes in different flavors:

  - uzbl-core: main component meant for integration with other tools and scripts
    - Uses WebkitGtk+ for rendering, network interaction (libsoup). Css, javascript, plugin support etc come for free
    - Provides interfaces to get data in (commands/configuration) and out (events): stdin/stdout/fifo/unix sockets
    - You see a webkit view and (optionally) a statusbar which gets populated externally
    - No built-in means for url changing, loading/saving of bookmarks, saving history, keybinds, downloads, ...
    - Extra functionality: many sample scripts come with it, or write them yourself
    - Entire configuration/state can be changed at runtime
    - Uzbl keeps it simple, and puts *you* in charge.
  - uzbl-browser: a complete browser experience based on uzbl-core
    - Uses a set of scripts (mostly python) that will fit most people, so things work out of the box.  Yet plenty of room for customisation
    - Brings everything you expect: url changing, history, downloads, form filling, link navigation, cookies, event management etc.  However: one page per instance
    - Advanced, customizable keyboard interface with support for modes, modkeys, multichars, variables (keywords) etc. (eg you can tweak the interface to be vim-like, emacs-like or any-other-program-like)
    - Adequate default configuration
    - Focus on plaintext storage for your data and configs in simple, parseable formats and adherence to the xdg basedir spec
    - Visually, similar to uzbl-core except that the statusbar contains useful things.  One window per webpage
  - uzbl-tabbed: wraps around uzbl-browser and multiplexes it
    - Spawns one window containing multiple tabs, each tab containing a full embedded uzbl-browser
    - Ideal as a quick and simple solution to manage multiple uzbl-browser instances without getting lost

  Uzbl is under heavy development and should be considered alpha.  See the [[https://www.uzbl.org/get.php][Get uzbl]] page
#+end_quote
* (github.com) uzbl/uzbl: A web browser that adheres to the unix philosophy. :website:
:PROPERTIES:
:ID:       70054cfb-3f89-4744-9dcf-c55eba84df39
:ROAM_REFS: https://github.com/uzbl/uzbl
:END:

#+begin_quote
  *** INTRODUCTION

  Any program can only be really useful if it complies with the Unix philosophy.  Web browsers (and other tools that work with HTML, such as feed readers) are frequent violators of this principle:

  - They build in way too much things into one (complex) program, dramatically decreasing the options to do things the way you want.
  - They store things in way too fancy formats (XML, RDF, SQLite, etc.) which are hard to store under version control, reuse in other scripts, and so on.

  The Uzbl project was started as an attempt to resolve this.
#+end_quote
* (github.com) haxney/ezbl: An Emacs interface for Uzbl.      :emacs:website:
:PROPERTIES:
:ID:       9157eda1-7b23-4dc5-b8e8-b4292d00d2e8
:ROAM_REFS: https://github.com/haxney/ezbl
:END:

#+begin_quote
  Ezbl - Emacs interface for Uzbl (uzbl.org)

  This package creates an Emacs interface for Uzbl, allowing you to control Uzbl from within Emacs.
#+end_quote
