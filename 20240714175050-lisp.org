:PROPERTIES:
:ID:       84ae6e85-a6a2-4133-bc53-274238081c2d
:END:
#+title: Lisp
#+filetags: :emacs:lisp:programming_language:programming:computer_science:

The Lisp [[id:b24601aa-09df-41e1-aa7e-25ead342db34][programming language]].  Originally short for LISt Processing.  Most commonly associated with [[id:b10990c2-d056-42f5-a4e7-145a405d9550][Artificial Intelligence]] and [[id:aca1324c-b142-4e34-a121-a8bb0a79ddf8][Emacs]].  There are many dialects of Lisp.  Most notable dialects are [[id:b5fb5c4b-d10f-4bca-91e1-a5e946ef0c83][Common Lisp]], [[id:6246f8d4-6cd4-489d-b19f-9c1142b51b60][Scheme]], and [[id:eac73a7d-f14b-4ec4-bc18-08d864e6c4c0][Emacs Lisp (ELisp)]].  First invented in 1958 by [[id:9c394806-9d31-4312-a2cf-ae0d0935f7b1][John McCarthy]] who published [[id:be8b671a-2bb0-4e85-8116-70e1ace8641c][his paper on the notation]] in 1960.  First implementation started in 1958 and was working around 1960.
* See Also
** (en.wikipedia.org) Lisp (programming language) - Wikipedia       :website:
:PROPERTIES:
:ID:       f03ed304-601d-4c5c-8e34-458281867b5b
:ROAM_REFS: https://en.wikipedia.org/wiki/Lisp_(programming_language)
:END:

#+begin_quote
  *Lisp* (historically *LISP*, an abbreviation of "list processing") is a family of [[https://en.wikipedia.org/wiki/Programming_language][programming languages]] with a long history and a distinctive, fully [[https://en.wikipedia.org/wiki/Parenthesized][parenthesized]] [[https://en.wikipedia.org/wiki/Polish_notation#Explanation][prefix notation]].  Originally specified in the late 1950s, it is the second-oldest [[https://en.wikipedia.org/wiki/High-level_programming_language][high-level programming language]] still in common use, after [[https://en.wikipedia.org/wiki/Fortran][Fortran]].  Lisp has changed since its early days, and many [[https://en.wikipedia.org/wiki/Programming_language_dialect][dialects]] have existed over its history.  Today, the best-known general-purpose Lisp dialects are [[https://en.wikipedia.org/wiki/Common_Lisp][Common Lisp]], [[https://en.wikipedia.org/wiki/Scheme_(programming_language)][Scheme]], [[https://en.wikipedia.org/wiki/Racket_(programming_language)][Racket]], and [[https://en.wikipedia.org/wiki/Clojure][Clojure]].

  Lisp was originally created as a practical [[https://en.wikipedia.org/wiki/Mathematical_notation][mathematical notation]] for [[https://en.wikipedia.org/wiki/Computer_program][computer programs]], influenced by (though not originally derived from) the notation of [[https://en.wikipedia.org/wiki/Alonzo_Church][Alonzo Church]]'s [[https://en.wikipedia.org/wiki/Lambda_calculus][lambda calculus]].  It quickly became a favored programming language for [[https://en.wikipedia.org/wiki/Artificial_intelligence][artificial intelligence]] (AI) research.  As one of the earliest programming languages, Lisp pioneered many ideas in [[https://en.wikipedia.org/wiki/Computer_science][computer science]], including [[https://en.wikipedia.org/wiki/Tree_(data_structure)][tree data structures]], [[https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)][automatic storage management]], [[https://en.wikipedia.org/wiki/Dynamic_typing][dynamic typing]], [[https://en.wikipedia.org/wiki/Conditional_(computer_programming)][conditionals]], [[https://en.wikipedia.org/wiki/Higher-order_function][higher-order functions]], [[https://en.wikipedia.org/wiki/Recursion_(computer_science)][recursion]], the [[https://en.wikipedia.org/wiki/Self-hosting_(compilers)][self-hosting compiler]], and the [[https://en.wikipedia.org/wiki/Read–eval–print_loop][read--eval--print loop]].

  The name /LISP/ derives from "LISt Processor". [[https://en.wikipedia.org/wiki/Linked_list][Linked lists]] are one of Lisp's major [[https://en.wikipedia.org/wiki/Data_structure][data structures]], and Lisp [[https://en.wikipedia.org/wiki/Source_code][source code]] is made of lists.  Thus, Lisp programs can manipulate source code as a data structure, giving rise to the [[https://en.wikipedia.org/wiki/Macro_(computer_science)][macro]] systems that allow programmers to create new syntax or new [[https://en.wikipedia.org/wiki/Domain-specific_language][domain-specific languages]] embedded in Lisp.

  The interchangeability of code and data gives Lisp its instantly recognizable syntax.  All program code is written as /[[https://en.wikipedia.org/wiki/S-expression][s-expressions]]/, or parenthesized lists.  A function call or syntactic form is written as a list with the function or operator's name first, and the arguments following; for instance, a function =f= that takes three arguments would be called as =(==f== ==arg1== ==arg2== ==arg3==)=.
#+end_quote
** [[id:9e65a3cb-c744-465e-b45d-c9494fddb701][(jmc.stanford.edu) History of Lisp]]
** [[id:8e828444-d654-43f9-8430-1314204ced46][(texdraft.github.io) Lisp Compiler]]
