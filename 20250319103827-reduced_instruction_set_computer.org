:PROPERTIES:
:ID:       321ba3cc-d73a-4620-88f7-2527cbae1aac
:ROAM_ALIASES: "Reduced Instruction Set Computer" RISC
:END:
#+title: Reduced Instruction Set Computer (RISC)
#+filetags: :computer_architecture:computer_science:

A RISC [[id:c980a340-2564-437e-a79f-388122a206ad][ISA]] is an ISA that only has single-purpose operations that generally execute in a predictable number of cycles.  In contrast to a [[id:96b6fc36-5b86-4108-b2b4-39b85a38f385][CISC]] ISA.
* (en.wikipedia.org) Reduced instruction set computer - Wikipedia   :website:
:PROPERTIES:
:ID:       c0e8ebf7-9257-4892-bb36-2dcaece06767
:ROAM_REFS: https://en.wikipedia.org/wiki/Reduced_instruction_set_computer
:END:

#+begin_quote
  In [[https://en.wikipedia.org/wiki/Electronics][electronics]] and [[https://en.wikipedia.org/wiki/Computer_science][computer science]], a *reduced instruction set computer* (*RISC*) is a [[https://en.wikipedia.org/wiki/Computer_architecture][computer architecture]] designed to simplify the individual instructions given to the computer to accomplish tasks.  Compared to the instructions given to a [[https://en.wikipedia.org/wiki/Complex_instruction_set_computer][complex instruction set computer]] (CISC), a RISC computer might require more instructions (more code) in order to accomplish a task because the individual instructions are written in simpler code.  The goal is to offset the need to process more instructions by increasing the speed of each instruction, in particular by implementing an [[https://en.wikipedia.org/wiki/Instruction_pipeline][instruction pipeline]], which may be simpler to achieve given simpler instructions.

  The key operational concept of the RISC computer is that each instruction performs only one function (e.g. copy a value from memory to a register).  The RISC computer usually has many (16 or 32) high-speed, general-purpose registers with a [[https://en.wikipedia.org/wiki/Loadâ€“store_architecture][load--store architecture]] in which the code for the register-register instructions (for performing arithmetic and tests) are separate from the instructions that access the main memory of the computer.  The design of the CPU allows RISC computers few simple [[https://en.wikipedia.org/wiki/Addressing_mode][addressing modes]] and predictable instruction times that simplify design of the system as a whole.

  The conceptual developments of the RISC computer architecture began with the [[https://en.wikipedia.org/wiki/IBM_801][IBM 801]] project in the late 1970s, but these were not immediately put into use.  Designers in California picked up the 801 concepts in two seminal projects, [[https://en.wikipedia.org/wiki/Stanford_MIPS][Stanford MIPS]] and [[https://en.wikipedia.org/wiki/Berkeley_RISC][Berkeley RISC]].  These were commercialized in the 1980s as the [[https://en.wikipedia.org/wiki/MIPS_architecture][MIPS]] and [[https://en.wikipedia.org/wiki/SPARC][SPARC]] systems. [[https://en.wikipedia.org/wiki/IBM][IBM]] eventually produced RISC designs based on further work on the 801 concept, the [[https://en.wikipedia.org/wiki/IBM_POWER_architecture][IBM POWER architecture]], [[https://en.wikipedia.org/wiki/PowerPC][PowerPC]], and [[https://en.wikipedia.org/wiki/Power_ISA][Power ISA]].  As the projects matured, many similar designs, produced in the mid-to-late 1980s and early 1990s, such as [[https://en.wikipedia.org/wiki/ARM_architecture_family][ARM]], [[https://en.wikipedia.org/wiki/PA-RISC][PA-RISC]], and [[https://en.wikipedia.org/wiki/DEC_Alpha][Alpha]], created central processing units that increased the commercial utility of the [[https://en.wikipedia.org/wiki/Unix][Unix]] [[https://en.wikipedia.org/wiki/Workstation][workstation]] and of [[https://en.wikipedia.org/wiki/Embedded_processor][embedded processors]] in the [[https://en.wikipedia.org/wiki/Laser_printer][laser printer]], the [[https://en.wikipedia.org/wiki/Router_(computing)][router]], and similar products.

  In the [[https://en.wikipedia.org/wiki/Minicomputer][minicomputer]] market, companies that included [[https://en.wikipedia.org/wiki/Celerity_Computing][Celerity Computing]], [[https://en.wikipedia.org/wiki/Pyramid_Technology][Pyramid Technology]], and [[https://en.wikipedia.org/wiki/Ridge_Computers][Ridge Computers]] began offering systems designed according to RISC or RISC-like principles in the early 1980s.  Few of these designs began by using RISC [[https://en.wikipedia.org/wiki/Microprocessor][microprocessors]].

  The varieties of RISC processor design include the [[https://en.wikipedia.org/wiki/ARC_(processor)][ARC]] processor, the DEC Alpha, the [[https://en.wikipedia.org/wiki/AMD_Am29000][AMD Am29000]], the ARM architecture, the [[https://en.wikipedia.org/wiki/Atmel_AVR][Atmel AVR]], [[https://en.wikipedia.org/wiki/Blackfin][Blackfin]], [[https://en.wikipedia.org/wiki/Intel_i860][Intel i860]], [[https://en.wikipedia.org/wiki/Intel_i960][Intel i960]], [[https://en.wikipedia.org/wiki/LoongArch][LoongArch]], [[https://en.wikipedia.org/wiki/Motorola_88000][Motorola 88000]], the MIPS architecture, PA-RISC, Power ISA, [[https://en.wikipedia.org/wiki/RISC-V][RISC-V]], [[https://en.wikipedia.org/wiki/SuperH][SuperH]], and SPARC.  RISC processors are used in [[https://en.wikipedia.org/wiki/Supercomputer][supercomputers]], such as the [[https://en.wikipedia.org/wiki/Fugaku_(supercomputer)][Fugaku]].
#+end_quote
